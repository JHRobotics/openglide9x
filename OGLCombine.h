#ifndef __OGLCOMBINE_H__INCLUDED__
#define __OGLCOMBINE_H__INCLUDED__

/* autogenerated */

static bool OGLTMUCombine(GrChipID_t tmu,
	GrCombineFunction_t color,
	GrCombineFactor_t color_factor, 
	GrCombineFunction_t alpha,
	GrCombineFactor_t alpha_factor)
{
	GLenum mode = GL_COMBINE, mode2 = GL_COMBINE;
	GLenum color_combine, alpha_combine;
	GLenum color_combine2, alpha_combine2;
	GLenum color_src0, color_src1 = GL_ZERO, color_src2 = GL_ZERO, color_src3 = GL_ZERO;
	GLenum color_op0, color_op1 = GL_ONE_MINUS_SRC_COLOR, color_op2 = GL_SRC_COLOR, color_op3 = GL_ONE_MINUS_SRC_COLOR;
	GLenum alpha_src0, alpha_src1 = GL_ZERO, alpha_src2 = GL_ZERO, alpha_src3 = GL_ZERO;
	GLenum alpha_op0, alpha_op1 = GL_ONE_MINUS_SRC_ALPHA, alpha_op2 = GL_SRC_ALPHA, alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
	bool rc = true;

	switch(color)
	{
		case GR_COMBINE_FUNCTION_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
		case GR_COMBINE_FUNCTION_LOCAL:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
		case GR_COMBINE_FUNCTION_LOCAL_ALPHA:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_CONSTANT;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_CONSTANT;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_CONSTANT;
					color_op1  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_CONSTANT;
					color_op1  = GL_ONE_MINUS_SRC_COLOR;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL_ALPHA:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3  = GL_ONE_MINUS_SRC_COLOR;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_SUBTRACT;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					rc = false;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_ONE_MINUS_SRC_COLOR;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_PREVIOUS;
					color_op2  = GL_ONE_MINUS_SRC_ALPHA;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_ONE_MINUS_SRC_ALPHA;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_CONSTANT;
					color_op2  = GL_ONE_MINUS_SRC_COLOR;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_CONSTANT;
					color_op2  = GL_ONE_MINUS_SRC_COLOR;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_PREVIOUS;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_TEXTURE;
					color_op2  = GL_SRC_ALPHA;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_CONSTANT;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					color_src2 = GL_CONSTANT;
					color_op2  = GL_SRC_COLOR;
					color_src3 = GL_TEXTURE;
					color_op3  = GL_SRC_COLOR;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					rc = false;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_TEXTURE;
					color_op1  = GL_SRC_COLOR;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(color_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_ALPHA;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = GL_TEXTURE;
					color_op0  = GL_SRC_COLOR;
					color_src1 = GL_PREVIOUS;
					color_op1  = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					rc = false;
					break;
				default:
					rc = false;
					break;
			}
			break;
	}
	
	switch(alpha)
	{
		case GR_COMBINE_FUNCTION_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
		case GR_COMBINE_FUNCTION_LOCAL:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
		case GR_COMBINE_FUNCTION_LOCAL_ALPHA:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3  = GL_ONE_MINUS_SRC_ALPHA;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_SUBTRACT;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					rc = false;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_CONSTANT;
					alpha_op2  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_CONSTANT;
					alpha_op2  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_TEXTURE;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2  = GL_SRC_ALPHA;
					alpha_src3 = GL_TEXTURE;
					alpha_op3  = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					rc = false;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_TEXTURE;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_CONSTANT;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_TEXTURE;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(alpha_factor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0  = GL_SRC_ALPHA;
					alpha_src1 = GL_PREVIOUS;
					alpha_op1  = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_DETAIL_FACTOR:
					rc = false;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					rc = false;
					break;
				default:
					rc = false;
					break;
		}
		break;
	}

	if(rc)
	{
		p_glActiveTextureARB(OGLUnit(tmu));
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE, mode);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_COMBINE_RGB, color_combine);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_COMBINE_ALPHA, alpha_combine);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE0_RGB, color_src0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND0_RGB, color_op0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE1_RGB, color_src1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND1_RGB, color_op1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE0_ALPHA, alpha_src0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND0_ALPHA, alpha_op0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE1_ALPHA, alpha_src1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND1_ALPHA, alpha_op1);

		if(mode == GL_COMBINE4_NV)
		{
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE2_RGB, color_src2);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND2_RGB, color_op2);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE3_RGB_NV, color_src3);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND3_RGB_NV, color_op3);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE2_ALPHA, alpha_src2);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND2_ALPHA, alpha_op2);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE3_ALPHA_NV, alpha_src3);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND3_ALPHA_NV, alpha_op3);
		}
	}
	else
	{
		GlideMsg("OGLTMUCombine fail %d, %d, %d, %d %d\n", tmu, color, color_factor, alpha, alpha_factor);
	}
	return rc;
}
static bool OGLColorCombine()
{
	bool rc = true;
	GLenum mode = GL_COMBINE;
	GLenum color_combine = GL_REPLACE;
	GLenum alpha_combine = GL_REPLACE;
	GLenum color_src0, color_op0, color_src1 = GL_PREVIOUS, color_op1 = GL_SRC_COLOR, color_src2 = GL_PREVIOUS, color_op2 = GL_SRC_COLOR, color_src3, color_op3;
	GLenum alpha_src0, alpha_op0, alpha_src1 = GL_PREVIOUS, alpha_op1 = GL_SRC_ALPHA, alpha_src2 = GL_PREVIOUS, alpha_op2 = GL_SRC_ALPHA, alpha_src3, alpha_op3;

	GLenum color_local = GL_PRIMARY_COLOR;
	GLenum color_other = GL_PRIMARY_COLOR;
	GLenum alpha_local = GL_PRIMARY_COLOR;
	GLenum alpha_other = GL_PRIMARY_COLOR;

	if(Glide.State.ColorCombineOther == GR_COMBINE_OTHER_TEXTURE) color_other = GL_PREVIOUS;
	if(Glide.State.AlphaOther == GR_COMBINE_OTHER_TEXTURE) alpha_other = GL_PREVIOUS;

	switch(Glide.State.ColorCombineFunction)
	{
		case GR_COMBINE_FUNCTION_ZERO:
			color_combine = GL_REPLACE;
			color_src0 = GL_PREVIOUS;
			color_op0 = GL_SRC_COLOR;
			break;
		case GR_COMBINE_FUNCTION_LOCAL:
			color_combine = GL_REPLACE;
			color_src0 = color_local;
			color_op0 = GL_SRC_COLOR;
			break;
		case GR_COMBINE_FUNCTION_LOCAL_ALPHA:
			color_combine = GL_REPLACE;
			color_src0 = color_local;
			color_op0 = GL_SRC_ALPHA;
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_other;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = color_other;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_other;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_OTHER %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL_ALPHA:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_local;
					color_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = GL_ZERO;
					color_op3 = GL_ONE_MINUS_SRC_COLOR;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL_ALPHA %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_SUBTRACT;
					color_src0 = color_other;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_ONE_MINUS_SRC_COLOR;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_other;
					color_op2 = GL_ONE_MINUS_SRC_ALPHA;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_ONE_MINUS_SRC_ALPHA;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = GL_PREVIOUS;
					color_op2 = GL_ONE_MINUS_SRC_ALPHA;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = GL_CONSTANT;
					color_op2 = GL_ONE_MINUS_SRC_COLOR;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = color_other;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_COLOR;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_other;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_other;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = color_local;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = GL_PREVIOUS;
					color_op2 = GL_SRC_ALPHA;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					mode = GL_COMBINE4_NV;
					color_combine = GL_ADD;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_other;
					color_op1 = GL_SRC_COLOR;
					color_src2 = GL_CONSTANT;
					color_op2 = GL_SRC_COLOR;
					color_src3 = color_local;
					color_op3 = GL_SRC_COLOR;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL_ALPHA %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_other;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_ONE_MINUS_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_ONE_MINUS_SRC_COLOR;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_REPLACE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_other;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					color_combine = GL_MODULATE;
					color_src0 = GL_PREVIOUS;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOD_FRACTION:
					color_combine = GL_MODULATE;
					color_src0 = GL_CONSTANT;
					color_op0 = GL_SRC_COLOR;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
				default:
					rc = false;
					GlideMsg("color - err fn GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(Glide.State.ColorCombineFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					color_combine = GL_REPLACE;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					color_combine = GL_SUBTRACT;
					color_src0 = color_local;
					color_op0 = GL_SRC_ALPHA;
					color_src1 = color_local;
					color_op1 = GL_SRC_COLOR;
					break;
			}
			break;
		default:
		GlideMsg("color - err\n");
			rc = false;
			break;
	} // switch channel

	switch(Glide.State.AlphaFunction)
	{
		case GR_COMBINE_FUNCTION_ZERO:
			alpha_combine = GL_REPLACE;
			alpha_src0 = GL_PREVIOUS;
			alpha_op0 = GL_SRC_ALPHA;
			break;
		case GR_COMBINE_FUNCTION_LOCAL:
			alpha_combine = GL_REPLACE;
			alpha_src0 = alpha_local;
			alpha_op0 = GL_SRC_ALPHA;
			break;
		case GR_COMBINE_FUNCTION_LOCAL_ALPHA:
			alpha_combine = GL_REPLACE;
			alpha_src0 = alpha_local;
			alpha_op0 = GL_SRC_ALPHA;
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_OTHER %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL_ALPHA:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = GL_ZERO;
					alpha_op3 = GL_ONE_MINUS_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_ADD_LOCAL_ALPHA %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_SUBTRACT;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_other;
					alpha_op2 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_other;
					alpha_op2 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_other;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = alpha_local;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					mode = GL_COMBINE4_NV;
					alpha_combine = GL_ADD;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_other;
					alpha_op1 = GL_SRC_ALPHA;
					alpha_src2 = GL_PREVIOUS;
					alpha_op2 = GL_SRC_ALPHA;
					alpha_src3 = alpha_local;
					alpha_op3 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_OTHER_MINUS_LOCAL_ADD_LOCAL_ALPHA %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_TEXTURE_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_ONE_MINUS_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_OTHER_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_other;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_LOCAL_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE_MINUS_TEXTURE_ALPHA:
					alpha_combine = GL_MODULATE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					alpha_src1 = alpha_local;
					alpha_op1 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL %d\n", Glide.State.AlphaFactor);
					break;
			}
			break;
		case GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL_ALPHA:
			switch(Glide.State.AlphaFactor)
			{
				case GR_COMBINE_FACTOR_ZERO:
					alpha_combine = GL_REPLACE;
					alpha_src0 = alpha_local;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				case GR_COMBINE_FACTOR_ONE:
					alpha_combine = GL_REPLACE;
					alpha_src0 = GL_PREVIOUS;
					alpha_op0 = GL_SRC_ALPHA;
					break;
				default:
					rc = false;
					GlideMsg("alpha - err fn GR_COMBINE_FUNCTION_SCALE_MINUS_LOCAL_ADD_LOCAL_ALPHA\n");
					break;
			}
			break;
		default:
			GlideMsg("alpha - err2\n");
			rc = false;
			break;
	} // switch channel

	if(rc)
	{
		p_glActiveTextureARB(OGLColorCombineUnit());
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_TEXTURE_ENV_MODE,  mode);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_COMBINE_RGB,       color_combine);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE0_RGB,       color_src0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE1_RGB,       color_src1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE2_RGB,       color_src2);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND0_RGB,      color_op0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND1_RGB,      color_op1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND2_RGB,      color_op2);
		if(mode == GL_COMBINE4_NV)
		{
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE3_RGB_NV,    color_src3);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND3_RGB_NV,   color_op3);
		}

		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_COMBINE_ALPHA,     alpha_combine);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE0_ALPHA,     alpha_src0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE1_ALPHA,     alpha_src1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE2_ALPHA,     alpha_src2);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND0_ALPHA,    alpha_op0);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND1_ALPHA,    alpha_op1);
		DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND2_ALPHA,    alpha_op2);
		if(mode == GL_COMBINE4_NV)
		{
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_SOURCE3_ALPHA_NV,  alpha_src3);
			DGL(glTexEnvi)(GL_TEXTURE_ENV, GL_OPERAND3_ALPHA_NV, alpha_op3);
		}
	}
	else
	{
		GlideMsg("OGLColorCombine fail %d, %d, %d, %d\n", Glide.State.ColorCombineFunction, Glide.State.ColorCombineFactor, Glide.State.AlphaFunction, Glide.State.AlphaFactor);
	}

	return rc;
}
#endif /*__OGLCOMBINE_H__INCLUDED__*/
